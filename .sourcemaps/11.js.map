{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"11.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n  ],\n})\nexport class LoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import {Component} from '@angular/core';\nimport {\n  IonicPage,\n  NavController,\n  NavParams,\n  ModalController,\n  Platform,\n  ToastController,\n  AlertController\n} from 'ionic-angular';\nimport {TabsPage} from \"../tabs/tabs\";\nimport {BackButtonService} from \"../../services/backButton.service\";\nimport {Storage} from '@ionic/storage';\nimport {FormBuilder, Validators, FormGroup} from '@angular/forms';\nimport {AppService} from '../../app/app.service';\nimport {NativeProvider} from '../../providers/native/native';\nimport {AppGlobal} from '../../app/app.service'\n\n\n/**\n * Generated class for the LoginPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n  username: any;\n  password: any;\n  user;\n  psw;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public modalCtrl: ModalController,\n              private backButtonService: BackButtonService, private platform: Platform, public storage: Storage, private formBuilder: FormBuilder, private appService: AppService,\n              public toastCtrl: ToastController, public alertCtrl: AlertController, private nativeProvider: NativeProvider) {\n    platform.ready().then(() => {\n      this.backButtonService.registerBackButtonAction(null);\n    });\n    this.setUser();\n    this.loginForm = formBuilder.group({\n      username: [this.user, Validators.compose([Validators.minLength(11), Validators.maxLength(11), Validators.required, Validators.pattern(\"^(13[0-9]|15[012356789]|17[03678]|18[0-9]|14[57])[0-9]{8}$\")])],\n      password: [this.psw, Validators.compose([Validators.required, Validators.minLength(6)])]\n    })\n    this.username = this.loginForm.controls['username'];\n    this.password = this.loginForm.controls['password'];\n  }\n\n// 弹出提示框\n  toast(message) {\n    let toast = this.toastCtrl.create({\n      message: message,\n      duration: 2000,\n      position: 'midle',\n      dismissOnPageChange: true,\n    });\n    toast.present();\n  }\n\n//登录\n  logIn(user) {\n    if (AppGlobal.getDomain() == null) {\n      this.toast('请先初始化IP地址');\n    } else {\n      let usr = {\n        username: user.username,\n        password: user.password\n      }\n      this.appService.httpPost('/login', usr, rs => {\n        if (rs.data == '登录成功') {\n          user.login = true;\n          this.storage.set(\"userinfo\", user);\n          this.storage.set(\"login\", true);\n          this.goTabs();\n        } else {\n          this.toast(rs.data);\n        }\n      }, true)\n    }\n  }\n\n// 注册\n  regist() {\n    let modal = this.modalCtrl.create('RegistPage');\n    modal.present();\n  }\n\n// 跳转到主页\n  goTabs() {\n    let modal = this.modalCtrl.create('TabsPage');\n    modal.present();\n  }\n\n// 保存登录信息\n  setUser() {\n    this.storage.get('userinfo').then((val) => {\n      if (val) {\n        this.user = val.username;\n        this.psw = val.password;\n      }\n    });\n  }\n\n// 修改请求地址\n  changeAdress() {\n    console.log(AppGlobal.getDomain())\n    this.showPrompt();\n  }\n\n  showPrompt() {\n    let prompt = this.alertCtrl.create({\n      title: '更新接口默认地址',\n      message: \"请填写当前服务器IP地址\",\n      inputs: [\n        {\n          name: 'title',\n          placeholder: 'IP地址'\n        },\n      ],\n      buttons: [\n        {\n          text: '取消',\n          handler: data => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: '确认',\n          handler: data => {\n            console.log(data.title);\n            let str = 'http://' + data.title + ':8011';\n            AppGlobal.setDomain(str);\n            this.storage.set(\"domain\", str);\n\n          }\n        }\n      ]\n    });\n    prompt.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}